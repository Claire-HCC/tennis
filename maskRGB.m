function [BW,maskedRGBImage] = maskRGB(img,target)
%createMask  Threshold img image using auto-generated code from colorThresholder app.
%  [BW,MASKEDRGBIMAGE] = createMask(img) thresholds image img using
%  auto-generated code from the colorThresholder App. The colorspace and
%  minimum/maximum values for each channel of the colorspace were set in the
%  App and result in a binary mask BW and a composite image maskedRGBImage,
%  which shows the original img image values under the mask BW.

% Auto-generated by colorThresholder app on 24-Apr-2016
%------------------------------------------------------
set_parameters;
% Convert img image to chosen color space
eval(['thr=' target ';']);
I = img;

% Define thresholds for channel 1 based on histogram settings
channel1Min = thr(1,1);
channel1Max = thr(1,2);

% Define thresholds for channel 2 based on histogram settings
channel2Min = thr(2,1);
channel2Max = thr(2,2);

% Define thresholds for channel 3 based on histogram settings
channel3Min = thr(3,1);
channel3Max = thr(3,2);

% Create mask based on chosen histogram thresholds
BW = (I(:,:,1) >= channel1Min ) & (I(:,:,1) <= channel1Max) & ...
    (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
    (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);

if strcmp(target,'p');
    BW = (I(:,:,1) >= channel1Min ) & (I(:,:,1) <= channel1Max) & ...
    (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
    (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max & ...
    I(:,:,1)-I(:,:,2)>100 & I(:,:,1)- I(:,:,3)>50 & ...
    sum(I,3) < 600);
end 

%Use a median filter to filter out noise
BW = medfilt2(BW, [5 5]);

% Remove all those pixels less than 100px
% BW = bwareaopen(BW,100);

% Convert the resulting grayscale image into a binary image.
%  BW = im2bw(BW,0.18);

% Initialize output masked image based on input image.
maskedRGBImage = img;

% Set background pixels where BW is false to zero.
maskedRGBImage(repmat(~BW,[1 1 3])) = 0;
